<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:y="clr-namespace:WpfApplication1">
    <SolidColorBrush x:Key="LineBrush" Color="#808080" />
    <ControlTemplate x:Key="TreeViewWithLines" TargetType="TreeViewItem">
        <ControlTemplate.Resources>
            <y:LineVisibilityConverter x:Key="LineVisibilityConverter" />
            <y:FirstLeafLineMarginConverter x:Key="FirstLeafLineMarginConverter" />
            <y:TreeViewItemToLineTranslateTransformFactor x:Key="TreeViewItemToLineTranslateTransformFactor" />
        </ControlTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="19" Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*" />
                    <ColumnDefinition Width="50*" />
                </Grid.ColumnDefinitions>
                <Line X1="0" X2="1" Grid.Column="1" x:Name="horizontalLine"
                          Fill="Transparent"
                          RenderOptions.EdgeMode="Aliased"
                          Stroke="{Binding Source={StaticResource LineBrush}}"
                          VerticalAlignment="Center"
                          Stretch="Fill"
                          StrokeDashArray="1 1">
                </Line>
            </Grid>
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50*"/>
                    <RowDefinition Height="50*"/>
                </Grid.RowDefinitions>
                <Line Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LineVisibilityConverter}, ConverterParameter=UpLine}"
                      Stretch="Fill"
                      Y1="0"  Y2="1"
                      RenderOptions.EdgeMode="Aliased"
                      Stroke="{Binding Source={StaticResource LineBrush}}"
                      StrokeDashArray="1 1"
                      HorizontalAlignment="Center">
                </Line>
                <Line Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LineVisibilityConverter}, ConverterParameter=DownLine}"
                      Grid.Row="1"
                      Stretch="Fill"
                      Y1="0"  Y2="1"
                      RenderOptions.EdgeMode="Aliased"
                      Stroke="{Binding Source={StaticResource LineBrush}}"
                      StrokeDashArray="1 1"
                      HorizontalAlignment="Center">
                </Line>
            </Grid>
            <Line Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LineVisibilityConverter}, ConverterParameter=DownLine}"
                      Grid.Row="1"
                      Stretch="Fill"
                      Y1="0"  Y2="1"
                      RenderOptions.EdgeMode="Aliased"
                      Stroke="{Binding Source={StaticResource LineBrush}}"
                      StrokeDashArray="1 1"
                      HorizontalAlignment="Center">
            </Line>

            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Width" Value="16"/>
                        <Setter Property="Height" Value="16"/>
                        <Setter Property="Focusable" Value="False"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Height="9" Width="9" BorderBrush="#808080" BorderThickness="1" CornerRadius="1" SnapsToDevicePixels="True">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#FCFCFC" Offset="0" />
                                                <GradientStop Color="#E3E3E3" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Grid SnapsToDevicePixels="True">
                                            <Rectangle Height="1" Width="5" Stroke="#4B63A7" SnapsToDevicePixels="True" />
                                            <Rectangle x:Name="CrossHorizontalLine" Height="5" Width="1" Stroke="#4B63A7" SnapsToDevicePixels="True" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Visibility" TargetName="CrossHorizontalLine" Value="Collapsed" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
                <ToggleButton.RenderTransform>
                    <TranslateTransform Y="1" />
                </ToggleButton.RenderTransform>
            </ToggleButton>

            <Border x:Name="Bd" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Grid.Column="1"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                <ContentPresenter x:Name="PART_Header" 
                                      ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                      Content="{TemplateBinding Header}" 
                                      ContentStringFormat="{TemplateBinding HeaderStringFormat}" 
                                      ContentSource="Header" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      SnapsToDevicePixels="True"/>
            </Border>

            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1" SnapsToDevicePixels="True" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="false">
                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Bd" Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>